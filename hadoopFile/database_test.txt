软考数据库
1. 弱实体和强实体

2. 关系型数据库 关系表达式优化

3. Mysql的授权语句

4. 触发器 触发器用于实现数据完整性
触发器定义语法：
create trigger trigger_name trigger_time trigger_event
on table_name
feferencing new row as nrow, old row as orow for each row
begin
    if inserting then
    update Shcool set schstunum=schstunum+1 where shcool.schno=nrow.schno
    end if
    if delete then
    xx
    end if
end
trigger_time 限定为before after
trigger_event 限定为insert update delete
on table_name 为触发事件的表

5. 三大范式 BCNF 每个范式的作用
BCNF是在3NF的基础上，消除主属性对码的部分和传递函数依赖
数据库大三大范式是指设计数据库时需要满足的三个规范，分别是第一范式（1NF）、第二范式（2NF）和第三范式（3NF）。
这三个范式的目的是为了保证数据库的数据结构合理、无冗余且更新操作不会导致数据错误。
具体来说，第一范式要求每个属性必须是不可再分的单一值，
第二范式要求每个非主属性必须完全依赖于主键，也就是说非主属性不能部分依赖于主键
第三范式要求每个非主属性只依赖于候选键。

BCNF范式是一种更高级的范式，它要求所有的非主属性都不能对任何一个候选键有部分依赖或传递依赖关系。
直观地说，就是所有的非主属性必须和主键有直接的关系，而不能通过其他的非主属性来间接关联。

总体来说，数据库范式的目的是为了减少冗余数据，增加数据的结构性和一致性，提高数据库的性能和可靠性。在设计数据库时，需要根据实际情况和需求选择合适的范式来规范数据库结构。

6. 函数依赖关系 函数依赖的概念 部分依赖和函数依赖

7. 函数依赖分解 有损还是无损

8. 码、主码和候选码

9. E-R图 组合/派生/多值/单值属性  ER图的图形表示
双椭圆表示多值属性，虚线椭圆表示派生属性

10. 分布式数据库数据透明性

11. mysql的建表语句
主键 primary key
取值范围约束 check(xx in ('F','M'))
外键约束 foreign key (xx) references name (xx)
外键约束2 field1 references table_name(field2)
外键删除 on delete cascade


12. 设置隔离级别
set session transaction isolation level xxx 四种隔离级别
read uncomitted 读未提交
read committed 读提交
repeatable read 可重复读
serializable 串行化

13. 存储过程语法

14. 事务语法
if error
begin
rollback
return -2
end

15. 创建视图的代码
 create view xxx as
 select 语句加工出需要的数据

 16. mysql求差集和并集的操作
 求差集
 select xx from table1
 except
 select xx from table2
 求并集
 select xx from table1
 union
 select xx from table2

16. 两段锁协议
两阶段锁协议是指对任何数据进行读写之前必须对数据加锁，在释放第一个封锁后
事务不再申请和获得任何其他锁。
两段的含义是：事务分为两个阶段，第一个阶段是获取锁，称为扩展阶段，
第二个阶段是释放锁，称为收缩节点
两阶段锁协议不能避免死锁，解决措施是采用死锁检测机制，在发现死锁后按照一定算法接触死锁

17. Mysql赋予权限和收回权限的语句？
GRANT <权限> on <对象类型> to <用户> WITH GRANT OPTION
如果指定with grant option，那么获得了权限的用户可以将权限赋给其他用户
public 表示将权限赋给全部用户

REVOKE <权限> on <对象类型> from <用户>
REVOKE SELECT ON TABLE A FROM 

18. 一级封锁协议、二级封锁协议和三级封锁协议
一级封锁协议解决丢失修改，但是不能解决不可重复读和脏读的问题
二级封锁协议防止了丢失修改和脏读，但是不能保证可重复读
三级封锁协议防还可以进一步防止不可重复读
一、一级封锁协议
　　
　　 一级封锁协议是：事务T在修改数据R之前必须先对其加X锁，直到事务结束才释放。事务结束包括正常结束（COMMIT）和非正常结束（ROLLBACK）。
　　
　　 一级封锁协议可以防止丢失修改，并保证事务T是可恢复的。使用一级封锁协议可以解决丢失修改问题。
　　
　　 在一级封锁协议中，如果仅仅是读数据不对其进行修改，是不需要加锁的，它不能保证可重复读和不读“脏”数据。
　　
二、二级封锁协议
　　
　　 二级封锁协议是：一级封锁协议加上事务T在读取数据R之前必须先对其加S锁，读完后方可释放S锁。
　　
　　 二级封锁协议除防止了丢失修改，还可以进一步防止读“脏”数据。但在二级封锁协议中，由于读完数据后即可释放S锁，所以它不能保证可重复读。
　　
三、三级封锁协议 
　　
　　三级封锁协议是：一级封锁协议加上事务T在读取数据R之前必须先对其加S锁，直到事务结束才释放。
　　
　　三级封锁协议除防止了丢失修改和不读“脏”数据外，还进一步防止了不可重复读。
　　
　　上述三级协议的主要区别在于什么操作需要申请封锁，以及何时释放。

19. 软件开发模型
瀑布模型 每个阶段按照顺序进行开发 存在依赖关系
快速原型法 先按照用户的快速开发一个原型，然后再进行迭代
螺旋模型 引入了风险分析

20. 分布式数据库的优点

21. 数据库crash恢复的方法
(1)清除尚未完成的事务对数据库的所有小改，undo所有未完成的事务(从后往前)
(2)将缓冲区中已经完成事务提交的结果写入磁盘中,redo所有已经提交的事务


数据库连接池
使用链表来表示连接池，每次从链表头获取数据库连接
连接池必须写成单例模式   懒汉双检测法
读取配置文件，参数化配置
初始化连接池
连接池自动增量
从连接池中获取连接
连接池的连接自动缩减
桂含连接